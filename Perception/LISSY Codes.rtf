{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // STATA commands for inequality perception paper   \
// These commands use Luxembourg Income Study Data. Before running the code, you first need to request for an access to LIS data.   \
// You then need to use the LISSY Java Interface to run the codes.   \
   \
// The following commands use household level data for the United States in 2010.   \
   \
foreach ccyy in  au10 tw10 cz10 dk10 ee10 fi10 fr10 de10 hu09 is10 it10 jp08 kr10 no10 pl10 ru10 sk10 si10 za10 es10 uk10 us10  \{           \
di "`ccyy'"           \
use pi pxit age sex educ educ_c nchildren occb1 marital emp ethnic_c using $`ccyy'p, clear         \
   \
  \
scalar trimrange = 95 \
scalar agemin = 20  \
scalar agemax=69  \
  \
drop if age<agemin                         \
drop if age>agemax  \
  \
// Grouping age  \
//recode age (min/24=1) (25/29=2) (30/34=3) (35/39=4) (40/44=5) (45/49=6) (50/54=7) (55/59=8) (60/64=9) (65/69=10) (70/74=11) (75/max=12)  \
recode age (min/29=1) (30/39=2) (40/49=3) (50/59=4) (60/max=5)  \
                 \
// Grouping education  \
//drop if educ==.  \
//keep if educ==3\
  \
// Grouping occupations  \
//drop if occ2010==.  \
//recode occ2010 (0/999=0) (1000/1999=1) (2000/2999=2) (3000/3999=3) (4000/4999=4) (5000/5999=5) (6000/6999=6) (7000/7999=7) (8000/8999=8) (9000/9999=9)  \
  \
  \
// Variable trim chops off the top and the bottom of the income distribution  \
// Variable wins winsorizes the top and bottom of the income distribution (trims and add to the lowest and highest bins)  \
  \
   \
// Calculating net earnings   \
gen dpi=pi \
drop if dpi==.       \
drop if dpi<=0 \
 \
qui sum dpi, de   \
 \
replace dpi=r(p`=trimrange') if dpi>r(p`=trimrange')  \
qui sum dpi, de        \
   \
// The following code are for dividing the income distribution into 7 equal bins   \
       \
scalar dif=r(max)-r(min)       \
        \
scalar bin1=r(min)+dif/7        \
scalar bin2=r(min)+dif*2/7        \
scalar bin3=r(min)+dif*3/7        \
scalar bin4=r(min)+dif*4/7        \
scalar bin5=r(min)+dif*5/7        \
scalar bin6=r(min)+dif*6/7        \
scalar bin7=r(min)+dif       \
        \
gen binn=0        \
replace binn=1 if (dpi<bin1)        \
replace binn=2 if (dpi<bin2) & (dpi>=bin1)        \
replace binn=3 if (dpi<bin3) & (dpi>=bin2)        \
replace binn=4 if (dpi<bin4) & (dpi>=bin3)        \
replace binn=5 if (dpi<bin5) & (dpi>=bin4)        \
replace binn=6 if (dpi<bin6) & (dpi>=bin5)        \
replace binn=7 if (dpi<=bin7) & (dpi>=bin6)        \
         \
di "`ccyy'"   \
tab binn        \
        \
\}           \
   \
}